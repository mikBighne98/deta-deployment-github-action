name: Deta Deployment Github Action
branding:
  icon: upload-cloud
  color: purple
description: Github Action for deploying apps / APIs to Deta Micros.

inputs:
  deta_access_token:
    description: Deta access token for Deta CLI authentication.
    required: true

  deploy_using:
    description: |-
      You can deploy using .deta metadata folder if it's in your repo or deta micro details.
      Examples: ".deta_metadata_folder" for deploying using .deta metadata folder,
                "deta_micro_details" for deploying using Deta micro details
    required: true

  deta_micro_name:
    description: Deta micro name.

  deta_project_name:
    description: Deta project name.
    default: "default"

  source:
    description: |-
      If your app / API is located in a subdirectory.
      For example, "src/app_name" if app / API to deploy is inside src/app_name directory of the repo.
    default: "."

  deployment_status_badge:
    description: For using Deta deployment status badge. For example, "true" for using Deta deployment status badge.

runs:
  using: composite
  steps:
    - uses: actions/checkout@v3

    - name: Install Deta CLI
      shell: bash
      run: curl -fsSL https://get.deta.dev/cli.sh | sh

    - name: Clone Deta Micro
#       if: ${{ inputs.deploy_using == 'deta_micro_details' }}
      shell: bash
      run: |
        ls
        export DETA_ACCESS_TOKEN=${{ inputs.deta_access_token }}
        ls
        mkdir -p tmp/${{ inputs.deta_micro_name }}
        ls
        ~/.deta/bin/deta projects
        ls

    - name: Deploy to Deta Micro
      id: deploy_to_deta_micro
      shell: bash
      run: |
        export DETA_ACCESS_TOKEN=${{ inputs.deta_access_token }}
        cd ${{ inputs.source }}
        ~/.deta/bin/deta deploy

    - name: Update Deta deployment status badge
      if: ${{ always() && inputs.deployment_status_badge == true }}
      shell: bash
      run: |
        curl -X 'PUT' \
          'https://ddga.deta.dev/test?run_id=${{ github.run_id }}&job_id=${{ github.job }}' \
          -H 'accept: application/json' \
          -H 'Content-Type: application/json' \
          -d '{
          "owner": ${{ github.repository_owner }},
          "repo": ${{ github.event.repository.name }},
          "branch": ${{ github.ref_name }},
          "status": ${{ steps.deploy_to_deta_micro.outcome }}
        }'
